#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataBase
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BeursFuifLicenses")]
	public partial class LicenseDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLicenseRequest(LicenseRequest instance);
    partial void UpdateLicenseRequest(LicenseRequest instance);
    partial void DeleteLicenseRequest(LicenseRequest instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertLicense(License instance);
    partial void UpdateLicense(License instance);
    partial void DeleteLicense(License instance);
    partial void InsertBeursEvent(BeursEvent instance);
    partial void UpdateBeursEvent(BeursEvent instance);
    partial void DeleteBeursEvent(BeursEvent instance);
    partial void InsertDrinkOrder(DrinkOrder instance);
    partial void UpdateDrinkOrder(DrinkOrder instance);
    partial void DeleteDrinkOrder(DrinkOrder instance);
    partial void InsertDrink(Drink instance);
    partial void UpdateDrink(Drink instance);
    partial void DeleteDrink(Drink instance);
    #endregion
		
		public LicenseDBDataContext() : 
				base(global::LicenseServerImplementation.Properties.Settings.Default.BeursFuifLicensesConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LicenseDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LicenseDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LicenseDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LicenseDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LicenseRequest> LicenseRequests
		{
			get
			{
				return this.GetTable<LicenseRequest>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<License> Licenses
		{
			get
			{
				return this.GetTable<License>();
			}
		}
		
		public System.Data.Linq.Table<BeursEvent> BeursEvents
		{
			get
			{
				return this.GetTable<BeursEvent>();
			}
		}
		
		public System.Data.Linq.Table<DrinkOrder> DrinkOrders
		{
			get
			{
				return this.GetTable<DrinkOrder>();
			}
		}
		
		public System.Data.Linq.Table<Drink> Drinks
		{
			get
			{
				return this.GetTable<Drink>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LicenseRequest")]
	public partial class LicenseRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Guid _LicenseID;
		
		private System.DateTime _RequestDate;
		
		private string _IP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnLicenseIDChanging(System.Guid value);
    partial void OnLicenseIDChanged();
    partial void OnRequestDateChanging(System.DateTime value);
    partial void OnRequestDateChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    #endregion
		
		public LicenseRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LicenseID
		{
			get
			{
				return this._LicenseID;
			}
			set
			{
				if ((this._LicenseID != value))
				{
					this.OnLicenseIDChanging(value);
					this.SendPropertyChanging();
					this._LicenseID = value;
					this.SendPropertyChanged("LicenseID");
					this.OnLicenseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestDate", DbType="DateTime NOT NULL")]
		public System.DateTime RequestDate
		{
			get
			{
				return this._RequestDate;
			}
			set
			{
				if ((this._RequestDate != value))
				{
					this.OnRequestDateChanging(value);
					this.SendPropertyChanging();
					this._RequestDate = value;
					this.SendPropertyChanged("RequestDate");
					this.OnRequestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log]")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private int _MinutesLeft;
		
		private string _Email;
		
		private string _IP;
		
		private System.Nullable<System.DateTime> _LogDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMinutesLeftChanging(int value);
    partial void OnMinutesLeftChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIPChanging(string value);
    partial void OnIPChanged();
    partial void OnLogDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLogDateChanged();
    #endregion
		
		public Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinutesLeft", DbType="Int NOT NULL")]
		public int MinutesLeft
		{
			get
			{
				return this._MinutesLeft;
			}
			set
			{
				if ((this._MinutesLeft != value))
				{
					this.OnMinutesLeftChanging(value);
					this.SendPropertyChanging();
					this._MinutesLeft = value;
					this.SendPropertyChanged("MinutesLeft");
					this.OnMinutesLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(590)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IP", DbType="NVarChar(50)")]
		public string IP
		{
			get
			{
				return this._IP;
			}
			set
			{
				if ((this._IP != value))
				{
					this.OnIPChanging(value);
					this.SendPropertyChanging();
					this._IP = value;
					this.SendPropertyChanged("IP");
					this.OnIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.License")]
	public partial class License : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _Email;
		
		private int _Hours;
		
		private System.Nullable<System.DateTime> _ActivationDate;
		
		private System.DateTime _CreationDate;
		
		private string _ActivationIP;
		
		private bool _TestLicense;
		
		private System.Nullable<bool> _ResetLicense;
		
		private string _ImagePath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHoursChanging(int value);
    partial void OnHoursChanged();
    partial void OnActivationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActivationDateChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnActivationIPChanging(string value);
    partial void OnActivationIPChanged();
    partial void OnTestLicenseChanging(bool value);
    partial void OnTestLicenseChanged();
    partial void OnResetLicenseChanging(System.Nullable<bool> value);
    partial void OnResetLicenseChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    #endregion
		
		public License()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hours", DbType="Int NOT NULL")]
		public int Hours
		{
			get
			{
				return this._Hours;
			}
			set
			{
				if ((this._Hours != value))
				{
					this.OnHoursChanging(value);
					this.SendPropertyChanging();
					this._Hours = value;
					this.SendPropertyChanged("Hours");
					this.OnHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActivationDate
		{
			get
			{
				return this._ActivationDate;
			}
			set
			{
				if ((this._ActivationDate != value))
				{
					this.OnActivationDateChanging(value);
					this.SendPropertyChanging();
					this._ActivationDate = value;
					this.SendPropertyChanged("ActivationDate");
					this.OnActivationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActivationIP", DbType="NVarChar(50)")]
		public string ActivationIP
		{
			get
			{
				return this._ActivationIP;
			}
			set
			{
				if ((this._ActivationIP != value))
				{
					this.OnActivationIPChanging(value);
					this.SendPropertyChanging();
					this._ActivationIP = value;
					this.SendPropertyChanged("ActivationIP");
					this.OnActivationIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestLicense", DbType="Bit NOT NULL")]
		public bool TestLicense
		{
			get
			{
				return this._TestLicense;
			}
			set
			{
				if ((this._TestLicense != value))
				{
					this.OnTestLicenseChanging(value);
					this.SendPropertyChanging();
					this._TestLicense = value;
					this.SendPropertyChanged("TestLicense");
					this.OnTestLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResetLicense", DbType="Bit")]
		public System.Nullable<bool> ResetLicense
		{
			get
			{
				return this._ResetLicense;
			}
			set
			{
				if ((this._ResetLicense != value))
				{
					this.OnResetLicenseChanging(value);
					this.SendPropertyChanging();
					this._ResetLicense = value;
					this.SendPropertyChanged("ResetLicense");
					this.OnResetLicenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(MAX)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BeursEvent")]
	public partial class BeursEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BeursEventID;
		
		private string _Name;
		
		private string _Street;
		
		private string _StreetNumber;
		
		private string _Zipcode;
		
		private string _City;
		
		private string _Country;
		
		private System.DateTime _EventDate;
		
		private System.Guid _Token;
		
		private System.DateTime _CreationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBeursEventIDChanging(System.Guid value);
    partial void OnBeursEventIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnStreetNumberChanging(string value);
    partial void OnStreetNumberChanged();
    partial void OnZipcodeChanging(string value);
    partial void OnZipcodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnEventDateChanging(System.DateTime value);
    partial void OnEventDateChanged();
    partial void OnTokenChanging(System.Guid value);
    partial void OnTokenChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    #endregion
		
		public BeursEvent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeursEventID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid BeursEventID
		{
			get
			{
				return this._BeursEventID;
			}
			set
			{
				if ((this._BeursEventID != value))
				{
					this.OnBeursEventIDChanging(value);
					this.SendPropertyChanging();
					this._BeursEventID = value;
					this.SendPropertyChanged("BeursEventID");
					this.OnBeursEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(250)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetNumber", DbType="NVarChar(250)")]
		public string StreetNumber
		{
			get
			{
				return this._StreetNumber;
			}
			set
			{
				if ((this._StreetNumber != value))
				{
					this.OnStreetNumberChanging(value);
					this.SendPropertyChanging();
					this._StreetNumber = value;
					this.SendPropertyChanged("StreetNumber");
					this.OnStreetNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="NVarChar(250)")]
		public string Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(250)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="NVarChar(250)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDate", DbType="DateTime NOT NULL")]
		public System.DateTime EventDate
		{
			get
			{
				return this._EventDate;
			}
			set
			{
				if ((this._EventDate != value))
				{
					this.OnEventDateChanging(value);
					this.SendPropertyChanging();
					this._EventDate = value;
					this.SendPropertyChanged("EventDate");
					this.OnEventDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrinkOrder")]
	public partial class DrinkOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DrinkOrderID;
		
		private System.Guid _Token;
		
		private System.Guid _DrinkID;
		
		private System.Nullable<System.Guid> _BeursEventID;
		
		private string _DrinkName;
		
		private System.DateTime _OrderDate;
		
		private decimal _Price;
		
		private System.DateTime _CreationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDrinkOrderIDChanging(System.Guid value);
    partial void OnDrinkOrderIDChanged();
    partial void OnTokenChanging(System.Guid value);
    partial void OnTokenChanged();
    partial void OnDrinkIDChanging(System.Guid value);
    partial void OnDrinkIDChanged();
    partial void OnBeursEventIDChanging(System.Nullable<System.Guid> value);
    partial void OnBeursEventIDChanged();
    partial void OnDrinkNameChanging(string value);
    partial void OnDrinkNameChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    #endregion
		
		public DrinkOrder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrinkOrderID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DrinkOrderID
		{
			get
			{
				return this._DrinkOrderID;
			}
			set
			{
				if ((this._DrinkOrderID != value))
				{
					this.OnDrinkOrderIDChanging(value);
					this.SendPropertyChanging();
					this._DrinkOrderID = value;
					this.SendPropertyChanged("DrinkOrderID");
					this.OnDrinkOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrinkID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DrinkID
		{
			get
			{
				return this._DrinkID;
			}
			set
			{
				if ((this._DrinkID != value))
				{
					this.OnDrinkIDChanging(value);
					this.SendPropertyChanging();
					this._DrinkID = value;
					this.SendPropertyChanged("DrinkID");
					this.OnDrinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeursEventID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BeursEventID
		{
			get
			{
				return this._BeursEventID;
			}
			set
			{
				if ((this._BeursEventID != value))
				{
					this.OnBeursEventIDChanging(value);
					this.SendPropertyChanging();
					this._BeursEventID = value;
					this.SendPropertyChanged("BeursEventID");
					this.OnBeursEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrinkName", DbType="NVarChar(250)")]
		public string DrinkName
		{
			get
			{
				return this._DrinkName;
			}
			set
			{
				if ((this._DrinkName != value))
				{
					this.OnDrinkNameChanging(value);
					this.SendPropertyChanging();
					this._DrinkName = value;
					this.SendPropertyChanged("DrinkName");
					this.OnDrinkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(9,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Drink")]
	public partial class Drink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DrinkID;
		
		private System.Guid _Token;
		
		private System.Nullable<System.Guid> _BeursEventID;
		
		private string _DrinkName;
		
		private decimal _Price;
		
		private decimal _CurrentPrice;
		
		private System.Nullable<decimal> _NextPrice;
		
		private System.Nullable<decimal> _NextManualPrice;
		
		private System.Nullable<decimal> _MinPrice;
		
		private System.Nullable<decimal> _MaxPrice;
		
		private System.Nullable<decimal> _NormalPrice;
		
		private System.Nullable<int> _Hotkey;
		
		private System.Nullable<System.DateTime> _LastUpdateDate;
		
		private System.DateTime _CreationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDrinkIDChanging(System.Guid value);
    partial void OnDrinkIDChanged();
    partial void OnTokenChanging(System.Guid value);
    partial void OnTokenChanged();
    partial void OnBeursEventIDChanging(System.Nullable<System.Guid> value);
    partial void OnBeursEventIDChanged();
    partial void OnDrinkNameChanging(string value);
    partial void OnDrinkNameChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnCurrentPriceChanging(decimal value);
    partial void OnCurrentPriceChanged();
    partial void OnNextPriceChanging(System.Nullable<decimal> value);
    partial void OnNextPriceChanged();
    partial void OnNextManualPriceChanging(System.Nullable<decimal> value);
    partial void OnNextManualPriceChanged();
    partial void OnMinPriceChanging(System.Nullable<decimal> value);
    partial void OnMinPriceChanged();
    partial void OnMaxPriceChanging(System.Nullable<decimal> value);
    partial void OnMaxPriceChanged();
    partial void OnNormalPriceChanging(System.Nullable<decimal> value);
    partial void OnNormalPriceChanged();
    partial void OnHotkeyChanging(System.Nullable<int> value);
    partial void OnHotkeyChanged();
    partial void OnLastUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdateDateChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    #endregion
		
		public Drink()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrinkID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DrinkID
		{
			get
			{
				return this._DrinkID;
			}
			set
			{
				if ((this._DrinkID != value))
				{
					this.OnDrinkIDChanging(value);
					this.SendPropertyChanging();
					this._DrinkID = value;
					this.SendPropertyChanged("DrinkID");
					this.OnDrinkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Token", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Token
		{
			get
			{
				return this._Token;
			}
			set
			{
				if ((this._Token != value))
				{
					this.OnTokenChanging(value);
					this.SendPropertyChanging();
					this._Token = value;
					this.SendPropertyChanged("Token");
					this.OnTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeursEventID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BeursEventID
		{
			get
			{
				return this._BeursEventID;
			}
			set
			{
				if ((this._BeursEventID != value))
				{
					this.OnBeursEventIDChanging(value);
					this.SendPropertyChanging();
					this._BeursEventID = value;
					this.SendPropertyChanged("BeursEventID");
					this.OnBeursEventIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrinkName", DbType="NVarChar(250)")]
		public string DrinkName
		{
			get
			{
				return this._DrinkName;
			}
			set
			{
				if ((this._DrinkName != value))
				{
					this.OnDrinkNameChanging(value);
					this.SendPropertyChanging();
					this._DrinkName = value;
					this.SendPropertyChanged("DrinkName");
					this.OnDrinkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(9,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentPrice", DbType="Decimal(9,2) NOT NULL")]
		public decimal CurrentPrice
		{
			get
			{
				return this._CurrentPrice;
			}
			set
			{
				if ((this._CurrentPrice != value))
				{
					this.OnCurrentPriceChanging(value);
					this.SendPropertyChanging();
					this._CurrentPrice = value;
					this.SendPropertyChanged("CurrentPrice");
					this.OnCurrentPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextPrice", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> NextPrice
		{
			get
			{
				return this._NextPrice;
			}
			set
			{
				if ((this._NextPrice != value))
				{
					this.OnNextPriceChanging(value);
					this.SendPropertyChanging();
					this._NextPrice = value;
					this.SendPropertyChanged("NextPrice");
					this.OnNextPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NextManualPrice", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> NextManualPrice
		{
			get
			{
				return this._NextManualPrice;
			}
			set
			{
				if ((this._NextManualPrice != value))
				{
					this.OnNextManualPriceChanging(value);
					this.SendPropertyChanging();
					this._NextManualPrice = value;
					this.SendPropertyChanged("NextManualPrice");
					this.OnNextManualPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPrice", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> MinPrice
		{
			get
			{
				return this._MinPrice;
			}
			set
			{
				if ((this._MinPrice != value))
				{
					this.OnMinPriceChanging(value);
					this.SendPropertyChanging();
					this._MinPrice = value;
					this.SendPropertyChanged("MinPrice");
					this.OnMinPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPrice", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> MaxPrice
		{
			get
			{
				return this._MaxPrice;
			}
			set
			{
				if ((this._MaxPrice != value))
				{
					this.OnMaxPriceChanging(value);
					this.SendPropertyChanging();
					this._MaxPrice = value;
					this.SendPropertyChanged("MaxPrice");
					this.OnMaxPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NormalPrice", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> NormalPrice
		{
			get
			{
				return this._NormalPrice;
			}
			set
			{
				if ((this._NormalPrice != value))
				{
					this.OnNormalPriceChanging(value);
					this.SendPropertyChanging();
					this._NormalPrice = value;
					this.SendPropertyChanged("NormalPrice");
					this.OnNormalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hotkey", DbType="Int")]
		public System.Nullable<int> Hotkey
		{
			get
			{
				return this._Hotkey;
			}
			set
			{
				if ((this._Hotkey != value))
				{
					this.OnHotkeyChanging(value);
					this.SendPropertyChanging();
					this._Hotkey = value;
					this.SendPropertyChanged("Hotkey");
					this.OnHotkeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdateDate
		{
			get
			{
				return this._LastUpdateDate;
			}
			set
			{
				if ((this._LastUpdateDate != value))
				{
					this.OnLastUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateDate = value;
					this.SendPropertyChanged("LastUpdateDate");
					this.OnLastUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
